version: "3"
services:
  # Internal services

  gateway:
    build:
      context: services/gateway
    environment:
      - TYK_GW_STORAGE_HOST=gateway-redis
      - TYK_GW_SECRET=${GATEWAY_SECRET}
      - JWT_SERVICES=tasks-api,madoc-api,configuration-api
    ports:
      - "8888:8080"
    links:
      - sorting-room
      - madoc
      - gateway-redis
      - tasks-api
      - model-api
      - madoc-ts
      - config-service
    volumes:
      - ./services/gateway/gateway.conf:/opt/tyk-gateway/tyk.conf
      - ./var/certs:/openssl-certs
    depends_on:
      - certs
      - gateway-redis

  madoc:
    build:
      context: services/madoc
    links:
      - madoc-database
    environment:
      - PHP_IDE_CONFIG=serverName=omeka-workspace
      - APP_ENV=${APP_ENV}
      - OMEKA__DATABASE_HOST=madoc-database
      - OMEKA__DATABASE_NAME=${MYSQL_DATABASE}
      - OMEKA__DATABASE_USER=${MYSQL_USER}
      - OMEKA__DATABASE_PASSWORD=${MYSQL_PASSWORD}
      - OMEKA__DATABASE_PORT=${MYSQL_PORT}
      - OMEKA__MAIN_SITE_DOMAIN=${MAIN_SITE_DOMAIN}
      - OMEKA__ELUCIDATE_URL=${ELUCIDATE_URL}
      - OMEKA__INTERNAL_URL=${OMEKA_INTERNAL_URL}
      - OMEKA__ANNOTATION_INDEXER=${ANNOTATION_INDEXER}
      - OMEKA__ELUCIDATE_PUBLIC_DOMAIN=${ELUCIDATE_PUBLIC_DOMAIN}
      - OMEKA__SEARCH_ELASTICSEARCH=search-elasticsearch:9200
      - OMEKA__ANNOTATION_ES_INDEX=jane-annotations
      - OMEKA__SEARCH_INDEXER=search-indexer:8000
    volumes:
      - ./services/madoc/packages:/srv/omeka/repos:delegated
      - ./services/madoc/.omeka/omeka-s/application:/srv/omeka/application:cached
      - ./var/files:/srv/omeka/files
      - ./services/madoc/config/omeka-app/application.config.php:/srv/omeka/application/config/application.config.php
      - ./services/madoc/translations:/srv/omeka/translations
      - ./var/certs:/openssl-certs

  certs:
    build:
      context: services/certs
    volumes:
      - ./var/certs:/openssl-certs

  madoc-ts:
    build:
      context: services/madoc-ts
      dockerfile: Dockerfile.dev
    restart: always
    volumes:
      - ./services/madoc-ts/lib:/home/node/app/lib:delegated
      - ./services/madoc-ts/migrations:/home/node/app/migrations:delegated
      - ./services/madoc-ts/schemas:/home/node/app/schemas:delegated
      - ./services/madoc-ts/ecosystem.config.js:/home/node/app/ecosystem.config.js
      - ./services/madoc-ts/service-jwts:/home/node/app/service-jwts
      - ./services/madoc-ts/translations:/home/node/app/translations
      - ./var/certs:/openssl-certs
      - ./var/jwt:/home/node/app/service-jwt-responses
      - ./var/files:/home/node/app/omeka-files
    environment:
      - DATABASE_HOST=shared-postgres
      - DATABASE_NAME=madoc
      - DATABASE_PORT=5432
      - DATABASE_USER=madoc
      - DATABASE_SCHEMA=public
      - DATABASE_PASSWORD=madoc_password
      - OMEKA__DATABASE_HOST=madoc-database
      - OMEKA__DATABASE_NAME=${MYSQL_DATABASE}
      - OMEKA__DATABASE_USER=${MYSQL_USER}
      - OMEKA__DATABASE_PASSWORD=${MYSQL_PASSWORD}
      - OMEKA__DATABASE_PORT=${MYSQL_PORT}
      - OMEKA__URL=http://madoc
      - REDIS_HOST=gateway-redis
      - API_GATEWAY=http://gateway:8080
      - OMEKA_FILE_DIRECTORY=/home/node/app/omeka-files
      - MIGRATE=true
    links:
      - shared-postgres
      - madoc-database
      - madoc
    depends_on:
      - certs

  tasks-api:
    build:
      context: services/tasks-api
    environment:
      - SERVER_PORT=3000
      - DATABASE_HOST=shared-postgres
      - DATABASE_NAME=tasks_api
      - DATABASE_PORT=5432
      - DATABASE_USER=tasks_api
      - DATABASE_SCHEMA=public
      - DATABASE_PASSWORD=tasks_api_password
      - QUEUE_LIST=tasks-api,madoc-ts
      - REDIS_HOST=gateway-redis
    ports:
      - "8105:3000"
    links:
      - shared-postgres
      - gateway-redis
    volumes:
      - ./services/tasks-api/lib:/home/node/app/lib

  model-api:
    image: digirati/capture-models:v0.1.1
    environment:
      - SERVER_PORT=3000
      - DATABASE_HOST=shared-postgres
      - DATABASE_NAME=model_api
      - DATABASE_PORT=5432
      - DATABASE_USER=model_api
      - DATABASE_SCHEMA=public
      - DATABASE_PASSWORD=model_api_password
    ports:
      - "8106:3000"
    links:
      - shared-postgres
    restart: "always"

  shared-postgres:
    build:
      context: services/shared-postgres
    environment:
      - POSTGRES_PASSWORD=postgres_password
      - TASKS_API_PASSWORD=tasks_api_password
      - MODEL_API_PASSWORD=model_api_password
    ports:
      - "5400:5432"
    volumes:
      - ./var/shared-database:/var/lib/postgresql/data

  sorting-room:
    build:
      context: services/sorting-room

  gateway-redis:
    image: redis:5-alpine

  madoc-database:
    build:
      context: services/madoc-database
    environment:
      - MYSQL_RANDOM_ROOT_PASSWORD=yes
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_PORT=${MYSQL_PORT}
    volumes:
#      - ./var/database/sql:/docker-entrypoint-initdb.d/
      - ./var/database/data:/var/lib/mysql/
    ports:
      - "3334:3306"

  config-service:
    image: digirati/madoc_config_service_django:62ea5e029fc5d6323c8c87c67fb836c25347938d
    environment:
      - USE_DOCKER=yes
      - IPYTHONDIR=/app/.ipython
      - MIGRATE=True
      - LOAD=False
      - DJANGO_DEBUG=False
      - WAITRESS=False
      - POSTGRES_HOST=shared-postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=config_service
      - POSTGRES_PASSWORD=config_service_password
      - POSTGRES_DB=config_service
      - DATABASE_URL=postgres://config_service:config_service_password@shared-postgres:5432/config_service
    links:
      - shared-postgres
    volumes:
      - ./configuration/schemas:/app/configurator/schemas
      - ./configuration/defaults:/app/configurator/default_config
